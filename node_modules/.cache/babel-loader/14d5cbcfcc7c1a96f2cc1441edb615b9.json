{"ast":null,"code":"var _jsxFileName = \"/Users/quentinrousset/Documents/GitHub/test-calendar/my-app/src/App.js\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Calendar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      'loading': true\n    };\n    this.url = 'http://slack-server-production.us-west-2.elasticbeanstalk.com/calendar/NY/28';\n    this.calData = [];\n  }\n\n  async componentDidMount() {\n    //fetch calendar data\n    const response = await fetch(this.url);\n    const data = await response.json();\n    const preData = [];\n\n    for (const key in data) {\n      preData.push(data[key]); // console.log(data[key]);\n    }\n\n    ;\n\n    for (let index = 1; index < preData.length; index++) {\n      this.calData.push(preData[index]);\n    }\n\n    this.setState({\n      'loading': false\n    }); //console.log(this.calData[0]);\n    //console.log(this.state);\n  }\n\n  render() {\n    const days = [];\n\n    if (this.state.calData.length !== 0) {\n      this.state.calData.forEach(element => {\n        days.push(!this.state.loading ? /*#__PURE__*/_jsxDEV(Day, {\n          eventArray: this.calData[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 41\n        }, this) : 'loading...');\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), days]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction Day(props) {\n  const dayEvent = [];\n  props.eventArray.forEach(element => {\n    dayEvent.push( /*#__PURE__*/_jsxDEV(Event, {\n      title: element.summary,\n      description: element.description,\n      time: element.start\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }, this));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"day\",\n    children: dayEvent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Day;\n\nfunction Event(props) {\n  function parseDateString(date) {\n    return date['dateTime'].substring(11, 16);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"eventContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [props.title, \" \", parseDateString(props.time)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 37\n    }, this), \" \", props.description]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Event;\nrender( /*#__PURE__*/_jsxDEV(Calendar, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 73,\n  columnNumber: 8\n}, this), document.querySelector('#root'));\nexport default Calendar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Day\");\n$RefreshReg$(_c2, \"Event\");","map":{"version":3,"sources":["/Users/quentinrousset/Documents/GitHub/test-calendar/my-app/src/App.js"],"names":["React","Component","render","Calendar","constructor","props","state","url","calData","componentDidMount","response","fetch","data","json","preData","key","push","index","length","setState","days","forEach","element","loading","Day","dayEvent","eventArray","summary","description","start","Event","parseDateString","date","substring","title","time","document","querySelector"],"mappings":"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","sourcesContent":["import './App.css';\n\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\n\nclass Calendar extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      'loading': true\n    };\n    this.url = 'http://slack-server-production.us-west-2.elasticbeanstalk.com/calendar/NY/28';\n    this.calData = [];\n  }\n\n  async componentDidMount(){\n    //fetch calendar data\n    const response =  await fetch(this.url)\n    const data = await response.json();\n    const preData = [];\n    for(const key in data) {\n      preData.push(data[key]);\n      // console.log(data[key]);\n    };\n    for (let index = 1; index < preData.length; index++) {\n      this.calData.push(preData[index]);\n    }\n    this.setState({'loading': false});\n    //console.log(this.calData[0]);\n    //console.log(this.state);\n  }\n\n  render() {\n    const days = [];\n    if(this.state.calData.length !== 0){\n      this.state.calData.forEach(element => {\n        days.push(!this.state.loading ? <Day eventArray={this.calData[0]}/> : 'loading...')\n    });\n    }\n\n    return (\n      <div>\n        <h1>Calendar</h1>\n        {days}\n      </div>\n    );\n  }\n}\n\nfunction Day(props){\n  const dayEvent = [];\n  props.eventArray.forEach(element => {\n    dayEvent.push(<Event title={element.summary} description={element.description} time={element.start} />)\n  });\n  return (\n    <div className='day'>\n    {dayEvent}\n    </div>\n  )\n}\n\nfunction Event(props){\n\n  function parseDateString(date){\n    return date['dateTime'].substring(11, 16);\n  }\n\n  return (\n    <div className=\"eventContainer\"><h3>{props.title} {parseDateString(props.time)}</h3> {props.description}</div>\n  )\n}\n\nrender(<Calendar />, document.querySelector('#root'));\n\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}